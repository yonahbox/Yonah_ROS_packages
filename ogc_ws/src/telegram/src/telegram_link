#!/usr/bin/env python3

# Copyright (C) 2020 Rumesh Sudhaharan

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import rospy
from std_msgs.msg import String

import sys
import os
from threading import Thread
import json

from Td import Td, Chat

def tdlib_cb(msg, td):
	td.send_message(msg.data)

def tdlib_recv():
	from_tele_pub = rospy.Publisher('ogc/from_telegram', String, queue_size=10)
	while True:
		event = td.receive()
		if event:
			rospy.logdebug(event)
			if event['@type'] == 'error':
				rospy.logwarn(json.dumps(event))
			if event['@type'] == 'updateNewMessage' and event['message']['sender_user_id'] in td.command_user_ids:
				if event['message']['is_outgoing'] == True:
					return
				message = event['message']['content']['text']['text']
				from_tele_pub.publish(message)
				rospy.loginfo("Incoming message from command user: %s", message)
				if message.lower() == 'pic':
					td.send_image('/home/ubuntu/test_pic.jpg')
				if message.lower() == 'loc':
					td.send_location('kompiam', (-5.38333333,143.92250000))


if __name__ == '__main__':
	try:
		rospy.init_node('tele_ros', anonymous=False)
		tdlib_dir = rospy.get_param("~tdlib_auth_dir")
		chat_name = rospy.get_param("~monitored_chat")
		command_users = rospy.get_param("~command_whitelist")
		rospy.loginfo(command_users)
		td = Td(tdlib_dir, chat_name, command_users)

		recv_thread = Thread(target=tdlib_recv)
		recv_thread.daemon = True
		recv_thread.start()

		rospy.Subscriber('ogc/to_telegram', String, tdlib_cb, td)

		rospy.logwarn(os.getcwd())
		rate = rospy.Rate(1)
		while not td.setup_complete():
			td.get_chats()
			rate.sleep()

		rospy.loginfo('setup complete')
		td.send_message('setup complete')
		
		rospy.spin()

	except rospy.ROSInterruptException:
		sys.stdout.flush()
		td.destroy()
		exit()
	except KeyboardInterrupt:
		sys.stdout.flush()
		td.destroy()
		exit()
	
